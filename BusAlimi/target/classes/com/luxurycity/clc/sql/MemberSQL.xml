<?xml version="1.0" encoding="UTF-8"?>
	<!DOCTYPE mapper
		PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		
<mapper namespace="mSQL">
	<!-- 요안에다가  작업-->
	<select id="loginCnt" resultType="int" parameterType="mVO">
		SELECT 
		    COUNT(*) cnt 
		FROM 
		    member 
		WHERE 
		    id = #{id}
		    AND pw = #{pw} 
		    AND isshow = 'Y' 
	</select>
	<select id="getMembInfo" resultType="mVO" parameterType="string">
		SELECT
			*
		FROM
			member
		WHERE
			id = #{id}
	</select>
	<select id="getMembAvt" resultType="aVO" parameterType="string">
		SELECT 
		    afile, dir, m.ano
		FROM 
		    avatar a, member m
		WHERE
			m.ano = a.ano 
		    AND id = #{id}
	</select>
	<select id="getAvt" resultType="aVO" >
		SELECT
		    ano, afile, dir, gen
		FROM
		    avatar
	</select>
	<select id="getQuest" resultType="fVO" >
		SELECT
			qno, quest
		FROM
			quest
		ORDER BY
			qno ASC
	</select>
	<select id="idCheck" resultType="int" parameterType="string">
		SELECT 
			count(*) cnt 
		FROM 
			member 
		WHERE 
			id = #{id}
			AND isshow = 'Y'
	</select>
	<select id="friendList" resultType="mVO" parameterType="string">
		SELECT
		    m.id, m.name, a.afile
		FROM
		    (
		    SELECT
		        id, frid
		    FROM
		        friend
		    WHERE
		        id = #{sid}
		        AND isshow = 'Y'
		    ) c,
		    member m,
		    avatar a
		WHERE
		    c.frid = m.id
		    AND m.ano = a.ano
	</select>
	<select id="getMsgList" resultType="msgVO" parameterType="string">
		SELECT
			ms.msgno, ms.id, ms.reid, ms.message, ms.adddate addDate, ms.adddate addTime, 
			ms.msgcheck, m.name, afile
		FROM
			message ms, member m, avatar a
		WHERE
			ms.reid = #{sid}
			AND ms.id = m.id
			AND m.ano = a.ano
			AND ms.isshow = 'Y'
		ORDER BY
			ms.adddate DESC
	</select>
	<insert id="addMsg" parameterType="java.util.HashMap">
			INSERT INTO
				message(msgno, id, reid, message)
			VALUES(
				(SELECT NVL(MAX(msgno), 100000)+1 FROM message), 
				#{sid}, #{reid}, #{msg}
			)
	</insert>
	<insert id="addMemb" parameterType="mVO" >
		INSERT INTO
			member(mno, id, pw, name, mail, gen, ano)
		VALUES(
			(SELECT NVL(MAX(mno) + 1, 1001) FROM member),
		 #{id}, #{pw}, #{name}, #{mail}, #{gen}, #{ano})
	</insert>
	<insert id="addFind" parameterType="fVO" >
		<selectKey keyProperty="mno" resultType="int" order="BEFORE">
			SELECT
				MAX(mno)
			From 
				member
		</selectKey>
		INSERT INTO 
		    find(fno, mno, qno, answer) 
		VALUES( 
		    ( 
		        SELECT NVL(MAX(fno) + 1, 1001) FROM find 
		    ), 
		    #{mno}, #{qno}, #{answer}) 
	</insert>
	<!-- 친구 추가 -->
	<!-- 프로시저 사용하기 -->
	<select id="addFriend" statementType="CALLABLE">
		{
			CALL friendProc(
				#{id},
				#{frid},
				#{cnt, mode=OUT, jdbcType=VARCHAR}
			)
		}
	</select>
	<!-- 메세지 총 갯수 가져오기 -->
	<select id="msgCnt" resultType="int" parameterType="string">
		SELECT
			COUNT(*) cnt
		FROM
			message
		WHERE
			reid = #{sid}
	</select>
	<!-- 메세지 삭제 -->
	<update id="msgDel" parameterType="int">
		UPDATE
			message
		SET
			isshow = 'N'
		WHERE
			msgno = #{msgno}
	</update>
	<!-- 메세지 수신 확인 -->
	<update id="msgCheck" parameterType="int">
		UPDATE
			message
		SET
			msgcheck = 'Y'
		WHERE
			msgno = #{msgno}
	</update>
	<!-- 친구요청수락 -->
	<update id="respFri" parameterType="frndVO">
		UPDATE
			friend
		SET
			isshow = 'Y'
		WHERE
			frno =
    		(
    		SELECT
        		frno
    		FROM
        		friend
    		WHERE
        		id = #{id}
        		AND frid = #{frid}
    		)
	</update>
	<!-- 친구 삭제 -->
	<update id="delFriend" parameterType="frndVO">
		UPDATE
			friend
		SET
			isshow = 'N'
		WHERE
			id = #{id}
			AND frid = #{frid}
	</update>
	<update id="editMemb" parameterType="mVO">
		UPDATE
			member
		<set>
			<if test="mail != ''">mail = #{mail},</if>
			<if test="ano != 0">ano = #{ano}</if>
		</set>
		WHERE
			id = #{id}
	</update>
	<update id="delMemb" parameterType="mVO">
		UPDATE
			member
		SET
			isshow = 'N'
		WHERE
			id = #{id}
	</update>

</mapper>